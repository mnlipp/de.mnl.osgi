# Configure Repositories
-plugin.1.IndexedMaven: \
    de.mnl.osgi.bnd.repository.maven.provider.IndexedMavenRepositoryProvider; \
        name=IndexedMaven; \
        location=cnf/indexed-maven; \
        releaseUrls="https://repo.maven.apache.org/maven2/"; \
        logIndexing=true

-pluginpath.IndexedMaved: \
    ${workspace}/cnf/release/de.mnl.osgi.bnd.repository/de.mnl.osgi.bnd.repository-4.1.0.jar,\
    ${workspace}/cnf/cache/biz.aQute.repository-6.0.0.jar;\
        url=https://repo1.maven.org/maven2/biz/aQute/bnd/biz.aQute.repository/6.0.0/biz.aQute.repository-6.0.0.jar

-plugin.3.Local: \
	aQute.bnd.deployer.repository.LocalIndexedRepo; \
		name = Local; \
		pretty = true; \
		local = ${build}/local

-plugin.4.Templates: \
	aQute.bnd.deployer.repository.LocalIndexedRepo; \
		name = Templates; \
		pretty = true; \
		local = ${build}/templates

-plugin.5.Release: \
	aQute.bnd.deployer.repository.LocalIndexedRepo; \
		name = Release; \
		pretty = true; \
		local = ${build}/release

javac.source: 11
javac.target: 11
-runee: JavaSE-11

# Set group id
-groupid: de.mnl.osgi

# Used in build.gradle for the artifact version
artifact_version: ${versionmask;===s;${Bundle-Version}}
# This should make the name of the incrementally generated jar
# match the one generated by gradle
-outputmask: ${@bsn}-${versionmask;===s;${@version}}.jar

# Generate pom with artifact version
-pom: version=${artifact_version}

# Set Git revision information in the manifests of built bundles
Git-Descriptor:           ${system-allow-fail;git describe --dirty --always}
Git-SHA:                  ${system-allow-fail;git rev-list -1 HEAD}
-diffignore: Git-Descriptor, Git-SHA

# Adapt to layout generated by eclipse plugin
bin=bin/main
testbin=bin/test

-tester: biz.aQute.tester.junit-platform
# For building JUnitJupiter/Mockito tests 
# (junit-platform-commons only needed by Eclipse test runner)
junit: junit-jupiter-api; version='[5.8.1,6.0)',\
	junit-platform-commons; version='[1.8.1,2)'
mockito: org.mockito.junit-jupiter; version='[4.1.0,5.0)'

# Always use contracts
-contract: *

-releaserepo: Release
-baselinerepo: Release
-baseline: *
